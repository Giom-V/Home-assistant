- id: Bus726
  alias: Bus de 7h26
  initial_state: false
  trigger:
  - at: '7:16'
    platform: time
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.cellClaire
      state: home
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - service: tts.google_say
    entity_id: media_player.gogol_home
    data:
      message: Il est 7 heure 16, le prochain bus est dans 10 minutes. C'est peut-être
        jouable !
  - service: tts.google_say
    entity_id: media_player.gogol_mini
    data:
      message: Il est 7 heure 16, le prochain bus est dans 10 minutes. C'est peut-être
        jouable !
- id: Bus750-10
  alias: Bus de 7h50 -10mn
  initial_state: false
  trigger:
  - at: '7:40'
    platform: time
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.cellClaire
      state: home
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - service: tts.google_say
    entity_id: media_player.gogol_home
    data:
      message: Il est 7 heure 40, il y a un bus dans 10 minutes. Arriveras-tu à le
        prendre aujourd'hui ?
  - service: tts.google_say
    entity_id: media_player.gogol_mini
    data:
      message: Il est 7 heure 40, il y a un bus dans 10 minutes. Arriveras-tu à le
        prendre aujourd'hui ?
- id: Bus750-5
  alias: Bus de 7h50 -5mn
  initial_state: false
  trigger:
  - at: '7:45'
    platform: time
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.cellClaire
      state: home
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - service: tts.google_say
    entity_id: media_player.gogol_home
    data:
      message: Plus que 5 minutes avant le bus de 7 heure 50 !
  - service: tts.google_say
    entity_id: media_player.gogol_mini
    data:
      message: Plus que 5 minutes avant le bus de 7 heure 50 !
- id: Bus750-2
  alias: Bus de 7h50 -2mn
  initial_state: false
  trigger:
  - at: '7:48'
    platform: time
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.cellClaire
      state: home
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - service: tts.google_say
    entity_id: media_player.gogol_home
    data:
      message: C'est le moment de sortir pour ne pas rater le bus de 7 heure 50 !
  - service: tts.google_say
    entity_id: media_player.gogol_mini
    data:
      message: C'est le moment de sortir pour ne pas rater le bus de 7 heure 50 !
- id: LightOnSolarium30mnBeforSunset
  alias: swith light on at sunset on weekdays
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30:00
  condition:
  - condition: time
    after: '16:30:00'
    before: '18:30:00'
  action:
  - service: homeassistant.turn_on
    entity_id: light.solarium
  - service: notify.slack
    data:
      message: Lights on 30mn before sunset!
- id: LightOnSolariumAt430pm
  alias: swith light on at 4:30 on weekdays
  trigger:
  - platform: time
    at: '16:30:00'
  condition:
  - condition: sun
    after: sunset
    after_offset: -00:30:00
  action:
  - service: homeassistant.turn_on
    entity_id: light.solarium
  - service: notify.slack
    data:
      message: Lights on at 4:30!
- id: LightOffSolariumAt6:30pm
  alias: swith light off at 6:30pm on weekdays
  trigger:
  - platform: time
    at: '18:30:00'
  action:
  - service: homeassistant.turn_off
    entity_id: light.solarium
  - service: notify.slack
    data:
      message: Lights off!
- id: LightOnWhenSomeoneArrives
  alias: swith light on when we arrive
  trigger:
  - platform: state
    entity_id: person.giom_2
    from: not_home
    to: home
  condition:
    condition: sun
    after: sunset
    after_offset: -00:30:00
  action:
  - service: homeassistant.turn_on
    entity_id: light.solarium
  - service: notify.slack
    data:
      message: Giom arrived
- id: LivingroomLightsOnWhenSomeoneArrives
  alias: swith living room lights on when we arrive
  trigger:
  - platform: state
    entity_id: person.giom_2
    from: not_home
    to: home
  condition:
    condition: and
    conditions:
    - condition: sun
      after: sunset
      after_offset: -00:30:00
    - condition: time
      before: '22:30:00'
  action:
  - service: homeassistant.turn_on
    entity_id: light.white
  - service: homeassistant.turn_on
    entity_id: light.color
  - service: homeassistant.turn_on
    entity_id: light.colorV2
- id: LightOffAfter10mnWhenSomeoneArrives
  alias: Turn off light 10 minutes after we arrived
  trigger:
  - platform: state
    entity_id: person.giom_2
    from: not_home
    to: home
    for:
      minutes: 10
  condition:
    condition: sun
    after: sunset
    after_offset: -00:30:00
  action:
  - service: homeassistant.turn_off
    entity_id: light.solarium
  - service: notify.slack
    data:
      message: Switching off Tempo after 10mn
- id: LightOffSolariumAfter10mnWhenWeArrives
  alias: Turn off solarium light 10 minutes after we arrived if after 6:30pm
  trigger:
  - platform: state
    entity_id: device_tracker.cellGiom
    from: not_home
    to: home
    for:
      minutes: 10
  - platform: state
    entity_id: device_tracker.cellClaire
    from: not_home
    to: home
    for:
      minutes: 10
  condition:
    condition: and
    conditions:
    - condition: sun
      after: sunset
      after_offset: -00:30:00
    - condition: time
      after: '18:30:00'
  action:
  - service: homeassistant.turn_off
    entity_id: light.solarium
  - service: notify.slack
    data:
      message: Switching off Solarium after 10mn (based on cell not person)
- id: TimeLapse
  alias: TimeLapse
  trigger:
  - hours: /1
    minutes: /30
    platform: time_pattern
    seconds: '0'
  condition:
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  action:
  - data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_day.jpg
    service: camera.snapshot
- id: TimeLapseNight
  alias: TimeLapse Night
  trigger:
    platform: time_pattern
    hours: /1
    minutes: 0
    seconds: 0
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_night.jpg
- id: TimeLapseNightIfSnowing
  alias: TimeLapse Night if snowing
  trigger:
    platform: time_pattern
    hours: /1
    minutes: 0
    seconds: 0
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    - condition: or
      conditions:
      - condition: state
        entity_id: sensor.dark_sky_precip_1d
        state: snow
      - condition: state
        entity_id: sensor.dark_sky_precip_1d
        state: sleet
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_night.jpg
- id: Sunrise-15
  alias: 15mn before sunrise
  trigger:
  - platform: sun
    event: sunrise
    offset: -00:15:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunrise_m15.jpg
- id: Sunrise-10
  alias: 10mn before sunrise
  trigger:
  - platform: sun
    event: sunrise
    offset: -00:10:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunrise_m10.jpg
- id: Sunrise-5
  alias: 5mn before sunrise
  trigger:
  - platform: sun
    event: sunrise
    offset: -00:05:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunrise_m05.jpg
- id: Sunrise
  alias: Sunrise
  trigger:
  - platform: sun
    event: sunrise
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunrise.jpg
- id: Sunrise+05
  alias: 5mn after sunrise
  trigger:
  - platform: sun
    event: sunrise
    offset: 00:05:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunrise_p05.jpg
- id: SunriseToPhone
  alias: Send sunrise picture to slack
  trigger:
  - platform: sun
    event: sunrise
    offset: 00:02:00
  action:
    service: script.turn_on
    entity_id: script.1542490337256
- id: DailyGif
  alias: Create the daily Gif
  trigger:
  - platform: time
    at: '23:30:00'
  action:
    service: script.notify_pushover
    data:
      today: '{{ now().strftime("%Y%m%d") }}'
- id: Sunrise+10
  alias: 10mn after sunrise
  trigger:
  - platform: sun
    event: sunrise
    offset: 00:10:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunrise_p10.jpg
- id: Sunrise+15
  alias: 15mn after sunrise
  trigger:
  - platform: sun
    event: sunrise
    offset: 00:15:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunrise_p15.jpg
- id: Sunset-15
  alias: 15mn before sunset
  trigger:
  - platform: sun
    event: sunset
    offset: -00:15:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunset_m15.jpg
- id: Sunset-10
  alias: 10mn before sunset
  trigger:
  - platform: sun
    event: sunset
    offset: -00:10:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunset_m10.jpg
- id: Sunset-5
  alias: 5mn before sunset
  trigger:
  - platform: sun
    event: sunset
    offset: -00:05:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunset_m05.jpg
- id: Sunset
  alias: Sunset
  trigger:
  - platform: sun
    event: sunset
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunset.jpg
- id: Sunset+05
  alias: 5mn after sunset
  trigger:
  - platform: sun
    event: sunset
    offset: 00:5:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunset_p05.jpg
- id: Sunset+10
  alias: 10mn after sunset
  trigger:
  - platform: sun
    event: sunset
    offset: 00:10:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunset_p10.jpg
- id: Sunset+15
  alias: 15mn after sunset
  trigger:
  - platform: sun
    event: sunset
    offset: 00:15:00
  action:
  - service: camera.snapshot
    data:
      entity_id: camera.raspberry_pi_camera
      filename: ***REMOVED***rpi_camera_{{ now().strftime("%Y%m%d-%H%M%S")
        }}_sunset_p15.jpg
- id: CubeTest_flip90
  alias: Cube tests flip90
  trigger:
    platform: event
    event_type: xiaomi_aqara.cube_action
    event_data:
      entity_id: binary_sensor.cube_158d00029a9528
      action_type: flip90
  action:
  - service: notify.slack
    data:
      message: Cube flip90, boum!
  - service: tts.google_say
    entity_id: media_player.gogol_home
    data:
      message: Cube flip90, boum!
- id: CubeTest_flip90
  alias: Cube tests flip180
  trigger:
    platform: event
    event_type: xiaomi_aqara.cube_action
    event_data:
      entity_id: binary_sensor.cube_158d00029a9528
      action_type: flip180
  action:
  - service: tts.google_say
    entity_id: media_player.gogol_home
    data:
      message: Cube flip180, boum!
  - service: notify.slack
    data:
      message: Cube flip180, boum!
- id: CubeTest_rotate
  alias: Cube tests rotate
  trigger:
    platform: event
    event_type: xiaomi_aqara.cube_action
    event_data:
      entity_id: binary_sensor.cube_158d00029a9528
      action_type: rotate
  action:
  - service: tts.google_say
    entity_id: media_player.gogol_home
    data:
      message: Cube rotate, boum!
  - service: notify.slack
    data:
      message: Cube rotate, boum!
- id: CubeTest
  alias: Cube tests
  trigger:
    platform: event
    event_type: xiaomi_aqara.cube_action
  action:
  - service: tts.google_say
    entity_id: media_player.gogol_home
    data:
      message: Cube action, boum!
  - service: notify.slack
    data:
      message: Cube action, {{ trigger.event }}
- id: DoorTest
  alias: Door tests
  trigger:
    platform: state
    entity_id: binary_sensor.door_window_sensor_158d00030318fd
  action:
  - service: tts.google_say
    entity_id: media_player.gogol_home
    data:
      message: Door opened!
  - service: notify.slack
    data:
      message: Door opened!
- id: '1575775244195'
  alias: New Automation
  description: sensor.withings_weight_kg_guillaume_***REMOVED***
  trigger:
  - entity_id: sensor.withings_weight_kg_guillaume_***REMOVED***
    platform: state
  condition: []
  action:
  - data:
      message: TEST withings
    service: notify.slack
- id: '1576116024811'
  alias: Switch off lights 30mn after sunrise
  description: ''
  trigger:
  - event: sunrise
    offset: 00:30
    platform: sun
  condition: []
  action:
  - service: scene.turn_on
    entity_id: scene.LightsOff
- id: MotionTest
  alias: Motion detected
  trigger:
    payload: 'ON'
    platform: mqtt
    topic: Home/dafang_camera/motion
  action:
  - delay: 00:01:00
  - service: hangouts.send_message
    data:
      target:
      - id: ***REMOVED***
      message:
      - text: Motion detected
      data:
        image_file: ***REMOVED***last_picture.jpg
- id: '1576556026038'
  alias: Turn motion detection on when nobody's at home
  description: ''
  trigger:
  - entity_id: binary_sensor.people_home
    for: 15m
    from: Home
    platform: state
    to: Away
  condition: []
  action:
    service: switch.turn_on
    data:
      entity_id: switch.dafang_camera_motion_detection
- id: '1576556089963'
  alias: Turn motion detection off when somebody's at home
  description: ''
  trigger:
  - entity_id: binary_sensor.people_home
    from: Away
    platform: state
    to: Home
  condition: []
  action:
    service: switch.turn_off
    data:
      entity_id: switch.dafang_camera_motion_detection
- id: '1576760475010'
  alias: Switch off all lights at 22:05
  description: ''
  trigger:
  - at: '22:05'
    platform: time
  condition: []
  action:
  - service: scene.turn_on
    entity_id: scene.LightsOff
- id: zone_cleaning
  alias: Start Cleaning Room
  trigger:
  - platform: state
    entity_id: input_select.vacuum_room
    from: Select Input
  action:
  - service: script.vacuum_dispatch
    data_template:
      room: '{{ trigger.to_state.state }}'
  - service: input_select.select_option
    entity_id: input_select.vacuum_room
    data_template:
      option: Select Input
- id: IFTTT_zone_cleaning_webhook
  alias: Clean room as asked through IFTTT
  trigger:
    platform: webhook
    webhook_id: vacuumDispatch
  condition:
  - condition: template
    value_template: '{{ trigger.json.type == ''call_service'' }}'
  - condition: template
    value_template: '{{ trigger.json.service == ''script.vacuum_dispatch'' }}'
  action:
  - service: system_log.write
    data_template:
      message: 'json received: {{ trigger.json }}'
      level: info
  - service: vacuum.set_fan_speed
    data:
      fan_speed: Balanced
      entity_id: vacuum.xiaomi_vacuum_cleaner
  - service_template: script.vacuum_dispatch
    data_template:
      room: '{{ trigger.json.room }}'
- id: IFTTT_zone_mopping_webhook
  alias: Mop room as asked through IFTTT
  trigger:
    platform: webhook
    webhook_id: vacuumMop
  condition:
  - condition: template
    value_template: '{{ trigger.json.type == ''call_service'' }}'
  - condition: template
    value_template: '{{ trigger.json.service == ''script.vacuum_mop'' }}'
  action:
  - service: system_log.write
    data_template:
      message: 'json received: {{ trigger.json }}'
      level: info
  - service: vacuum.set_fan_speed
    data:
      fan_speed: Gentle
      entity_id: vacuum.xiaomi_vacuum_cleaner
  - service_template: script.vacuum_dispatch
    data_template:
      room: '{{ trigger.json.room }}'
  - delay:
      minutes: 1
  - wait_template: '{{ is_state(''vacuum.xiaomi_vacuum_cleaner'', ''docked'') }}'
  - service: vacuum.set_fan_speed
    data:
      fan_speed: Balanced
      entity_id: vacuum.xiaomi_vacuum_cleaner
- id: IFTTT_stop_vaccum_webhook
  alias: Stop vaccum as asked through IFTTT
  trigger:
    platform: webhook
    webhook_id: vacuumStop
  condition:
  - condition: template
    value_template: '{{ trigger.json.type == ''call_service'' }}'
  - condition: template
    value_template: '{{ trigger.json.service == ''script.vacuum_stop'' }}'
  action:
  - service: system_log.write
    data_template:
      message: 'json received: {{ trigger.json }}'
      level: info
  - service: vacuum.stop
    data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
- id: IFTTT_recharge_vaccum_webhook
  alias: Send vaccum to base as asked through IFTTT
  trigger:
    platform: webhook
    webhook_id: vacuumGoToBase
  condition:
  - condition: template
    value_template: '{{ trigger.json.type == ''call_service'' }}'
  - condition: template
    value_template: '{{ trigger.json.service == ''script.vacuum_go_to_base'' }}'
  action:
  - service: system_log.write
    data_template:
      message: 'json received: {{ trigger.json }}'
      level: info
  - service: vacuum.return_to_base
    data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
- id: NightTime
  alias: Night time
  trigger:
  - at: '19:15'
    platform: time
  action:
  - service: scene.turn_on
    entity_id: scene.PinkAndPurpleLivingRoomDimmed
  - delay:
      minutes: 15
  - service: script.vacuum_diningroom
- id: '1579612388601'
  alias: Switch off all lights when nobody's home for 30mn
  description: Switch off all lights when nobody's home for 30mn
  trigger:
  - entity_id: binary_sensor.people_home
    for: 30m
    from: Home
    platform: state
    to: Away
  action:
  - entity_id: scene.lightsoff
    service: scene.turn_on
- id: tradfri_remote_control_toggle
  alias: Télécommande ikea - toggle
  initial_state: 'on'
  trigger:
  - platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 1001
  - platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 1002
  action:
  - service: light.toggle
    entity_id:    
    - light.colorv2
    - light.color
    - light.white
- id: tradfri_remote_control_increase_brightness
  alias: Télécommande ikea - increase brightness
  initial_state: 'on'
  trigger:
  - platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 2001
  - platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 2002
  action:
  - service: light.turn_on
    data_template:
      entity_id: light.colorv2
      brightness: >
        {% set bri = state_attr('light.colorv2', 'brightness') | int %}
        {{ [bri * 2, 255] | min }}
  - service: light.turn_on
    data_template:
      entity_id: light.color
      brightness: >
        {% set bri = state_attr('light.color', 'brightness') | int %}
        {{ [bri * 2, 255] | min }}
  - service: light.turn_on
    data_template:
      entity_id: light.white
      brightness: >
        {% set bri = state_attr('light.white', 'brightness') | int %}
        {{ [bri * 2, 255] | min }}
- id: tradfri_remote_control_decrease_brightness
  alias: Télécommande ikea - decrease brightness
  initial_state: 'on'
  trigger:
  - platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 3001
  - platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 3002
  action:
  - service: light.turn_on
    data_template:
      entity_id: light.colorv2
      brightness: >
        {% set bri = state_attr('light.colorv2', 'brightness') | float %}
        {% set half_bri = bri / 2 %}
        {{ half_bri | round(0, "ceil") | int }}
  - service: light.turn_on
    data_template:
      entity_id: light.color
      brightness: >
        {% set bri = state_attr('light.color', 'brightness') | float %}
        {% set half_bri = bri / 2 %}
        {{ half_bri | round(0, "ceil") | int }}
  - service: light.turn_on
    data_template:
      entity_id: light.white
      brightness: >
        {% set bri = state_attr('light.white', 'brightness') | float %}
        {% set half_bri = bri / 2 %}
        {{ half_bri | round(0, "ceil") | int }}
- id: tradfri_remote_control_left_arrow
  alias: Télécommande ikea - left button
  initial_state: 'on'
  trigger:
  - platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 4001
  - platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 4002
  action:
  - service: scene.turn_on
    entity_id: scene.WhiteLivingRoom
- id: tradfri_remote_control_right_arrow
  alias: Télécommande ikea - right button
  initial_state: 'on'
  trigger:
  - platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 5001
  - platform: event
    event_type: deconz_event
    event_data:
      id: tradfri_remote_control
      event: 5002
  action:
  - service: scene.turn_on
    entity_id: scene.PinkAndPurpleLivingRoom