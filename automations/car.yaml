# These are all the automations related to my car and its charger since I only want to charge it during off-peak hours (and later on when producing a surplus of electricity with panels).
#
# The automations are:
# * `Turn on the car's chargeur only during off-peak hours`: Swith on/off the plug controlling the car charger depending on the off-peak hours. I'm quite satisfied to have managed to do that in one automation instead of two.
# * `Preheat the car`: In winter, on school days, if the temperature is low, preheat the car just before when we have to go to school.
# * `Lock car when at home for at least an hour`: I very often forget to close my car's door so this is a failsafe.
# * `Reload Kia integration when it's down`: Sadly the Kia integration can but flaky so this aims at making things better.
#
# There's also a bunch of automations related to logging my car consumption but since they don't work at the moment you should just ignore them.

- id: toggle_car_charger_peak_hours
  alias: Turn on the car's chargeur only during off-peak hours
  description: ""
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.heure_creuse
      to: "on"
  condition: []
  action:
    - type:
        "{% if binary_sensor.heure_creuse.state = true %}\n  turn_on\n{% else %}\n
        \ turn_off\n{% endif %}\n"
      device_id: ed915ff8d67e254ac4696ba8ee133128
      entity_id: switch.chargeur_voiture
      domain: switch
  mode: single
- id: "1669558090658"
  alias: Preheat the car
  description: ""
  trigger:
    - platform: time
      at: 08:20:00
  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - thu
        - fri
    - condition: numeric_state
      entity_id: sensor.cesson_sevigne_temperature
      below: 10
  action:
    - service: script.turn_on
      data:
        entity_id: script.preheat_car
  mode: single
- id: "1679429109960"
  alias: Lock car when at home for at least an hour
  description: ""
  trigger:
    - platform: state
      entity_id:
        - device_tracker.bleuette_location
      to: home
      for:
        hours: 1
        minutes: 0
        seconds: 0
    - platform: state
      entity_id:
        - lock.bleuette_door_lock
      to: unlocked
      for:
        hours: 1
        minutes: 0
        seconds: 0
  condition:
    - condition: state
      entity_id: lock.bleuette_door_lock
      state: unlocked
      for:
        hours: 0
        minutes: 0
        seconds: 0
    - condition: state
      entity_id: device_tracker.bleuette_location
      state: home
      for:
        hours: 0
        minutes: 0
        seconds: 0
  action:
    - service: lock.lock
      data: {}
      target:
        entity_id: lock.bleuette_door_lock
  mode: single
- id: "1698006992086"
  alias: Reload Kia integration when it's down
  description: ""
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.bleuette_ev_battery_charge
      to: unavailable
      for:
        hours: 1
        minutes: 0
        seconds: 0
  condition: []
  action:
    - service: homeassistant.reload_config_entry
      data: {}
      target:
        device_id: 1a31a3c555afa6a7768c4686a2ac04a0
  mode: single
- id: "SaveCarBatteryLevelAtHome"
  alias: Save car's battery Level when at home
  description: ""
  trigger:
    - platform: state
      entity_id:
        - sensor.bleuette_car_battery_level
    - platform: zone
      entity_id: device_tracker.bleuette_location
      zone: zone.home
      event: enter
  condition:
    - condition: zone
      entity_id: device_tracker.bleuette_location
      zone: zone.home
  action:
    - service: input_number.set_value
      data:
        value: "{{ states('sensor.bleuette_ev_battery_level') | int }}"
      target:
        entity_id: input_number.car_battery_when_leaving_home
    - service: input_datetime.set_datetime
      data:
        datetime: "{{ now() }}"
      target:
        entity_id: input_datetime.last_time_bleuette_left_home
  mode: single
- id: "SaveCarBatteryLevelAtHomeFailsafe"
  alias: Save car's battery Level when at home (Failsafe)
  description: ""
  trigger:
    - platform: zone
      entity_id: device_tracker.bleuette_location
      zone: zone.home
      event: leave
  # condition:
  #   - condition: template
  #     value_template: >-
  #       "{{ as_timestamp(now()) >
  #       (as_timestamp(states('input_datetime.last_time_bleuette_left_home')) + 30 * 60 ) }}"
  action:
    - service: input_datetime.set_datetime
      data:
        datetime: "{{ now() }}"
      target:
        entity_id: input_datetime.last_time_bleuette_left_home
  mode: single
- id: "SaveCarBatteryLevelAtNozay"
  alias: Save car's battery Level when at Nozay
  description: ""
  trigger:
    - platform: state
      entity_id:
        - sensor.bleuette_car_battery_level
    - platform: zone
      entity_id: device_tracker.bleuette_location
      zone: zone.nozay
      event: enter
  condition:
    - condition: zone
      entity_id: device_tracker.bleuette_location
      zone: zone.nozay
  action:
    - service: input_number.set_value
      data:
        value: "{{ states('sensor.bleuette_ev_battery_level') | int }}"
      target:
        entity_id: input_number.car_battery_when_leaving_nozay
    - service: input_datetime.set_datetime
      data:
        datetime: "{{ now() }}"
      target:
        entity_id: input_datetime.last_time_bleuette_left_nozay
  mode: single
- id: "SaveCarBatteryLevelAtNozayFailsafe"
  alias: Save car's battery Level when at Nozay (Failsafe)
  description: ""
  trigger:
    - platform: zone
      entity_id: device_tracker.bleuette_location
      zone: zone.nozay
      event: leave
  # condition:
  #   - condition: template
  #     value_template: >-
  #       "{{ as_timestamp(now()) >
  #       (as_timestamp(states('input_datetime.last_time_bleuette_left_nozay')) + 30 * 60 ) }}"
  action:
    - service: input_datetime.set_datetime
      data:
        datetime: "{{ now() }}"
      target:
        entity_id: input_datetime.last_time_bleuette_left_nozay
  mode: single
- id: "SaveCarConsumptionWhenArrivingInNozay"
  alias: Save car's consumption when arriving in Nozay
  trigger:
    - platform: zone
      entity_id: device_tracker.bleuette_location
      zone: zone.nozay
      event: enter
  condition:
    - condition: template
      value_template: >-
        "{{ as_timestamp(now()) <
        (as_timestamp(states('input_datetime.last_time_bleuette_left_home')) + 4 * 60 * 60 ) }}"
  action:
    - service: google_sheets.append_sheet
      data:
        config_entry: 7becb5248c5dcf319860b1faa05a3170
        worksheet: Bleuette
        data:
          Date: "{{ now().strftime('%-d-%b-%y') }}"
          Départ: Cesson
          Arrivée: Nozay
          Batterie initiale: "{{ states('input_number.car_battery_when_leaving_home')|float(0) }}"
          Batterie finale: "{{ states('sensor.bleuette_ev_battery_level')|float(0) }}"
          Consommation: "{{ states('input_number.car_battery_when_leaving_home')|float(0) - states('sensor.bleuette_ev_battery_level')|float(0) }}"
          Temperature: "{{ states('sensor.dark_sky_temperature') }}"
          Météo: "{{ states('weather.dark_sky') }}"
    - service: input_datetime.set_datetime
      data:
        timestamp: 1
      target:
        entity_id: input_datetime.last_time_bleuette_left_home
  mode: single
- id: "SaveCarConsumptionWhenComingBackFromNozay"
  alias: Save car's consumption when coming back from Nozay
  trigger:
    - platform: zone
      entity_id: device_tracker.bleuette_location
      zone: zone.home
      event: enter
  condition:
    - condition: template
      value_template: >-
        "{{ as_timestamp(now()) <
        (as_timestamp(states('input_datetime.last_time_bleuette_left_nozay')) + 4 * 60 * 60 ) }}"
  action:
    - service: google_sheets.append_sheet
      data:
        config_entry: 7becb5248c5dcf319860b1faa05a3170
        worksheet: Bleuette
        data:
          Date: "{{ now().strftime('%-d-%b-%y') }}"
          Départ: Nozay
          Arrivée: Cesson
          Batterie initiale: "{{ states('input_number.car_battery_when_leaving_nozay')|float(0) }}"
          Batterie finale: "{{ states('sensor.bleuette_ev_battery_level')|float(0) }}"
          Consommation: "{{ states('input_number.car_battery_when_leaving_nozay')|float(0) - states('sensor.bleuette_ev_battery_level')|float(0) }}"
          Temperature: "{{ states('sensor.dark_sky_temperature') }}"
          Météo: "{{ states('weather.dark_sky') }}"
    - service: input_datetime.set_datetime
      data:
        timestamp: 1
      target:
        entity_id: input_datetime.last_time_bleuette_left_nozay
  mode: single
