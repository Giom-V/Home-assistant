- id: zone_cleaning
  alias: Start Cleaning Room
  trigger:
  - platform: state
    entity_id: input_select.vacuum_room
    from: Select Input
  action:
  - service: script.vacuum_dispatch
    data_template:
      room: '{{ trigger.to_state.state }}'
  - service: input_select.select_option
    entity_id: input_select.vacuum_room
    data_template:
      option: Select Input
- id: IFTTT_zone_cleaning_webhook
  alias: Clean room as asked through IFTTT
  trigger:
    platform: webhook
    webhook_id: vacuumDispatch
  condition:
  - condition: template
    value_template: '{{ trigger.json.type == ''call_service'' }}'
  - condition: template
    value_template: '{{ trigger.json.service == ''script.vacuum_dispatch'' }}'
  action:
  - service: system_log.write
    data_template:
      message: 'json received: {{ trigger.json }}'
      level: info
  - service: vacuum.set_fan_speed
    data:
      fan_speed: Balanced
      entity_id: vacuum.xiaomi_vacuum_cleaner
  - service_template: script.vacuum_dispatch
    data_template:
      room: '{{ trigger.json.room }}'
- id: IFTTT_zone_mopping_webhook
  alias: Mop room as asked through IFTTT
  trigger:
    platform: webhook
    webhook_id: vacuumMop
  condition:
  - condition: template
    value_template: '{{ trigger.json.type == ''call_service'' }}'
  - condition: template
    value_template: '{{ trigger.json.service == ''script.vacuum_mop'' }}'
  action:
  - service: system_log.write
    data_template:
      message: 'json received: {{ trigger.json }}'
      level: info
  - service: vacuum.set_fan_speed
    data:
      fan_speed: Gentle
      entity_id: vacuum.xiaomi_vacuum_cleaner
  - service_template: script.vacuum_dispatch
    data_template:
      room: '{{ trigger.json.room }}'
  - delay:
      minutes: 1
  - wait_template: '{{ is_state(''vacuum.xiaomi_vacuum_cleaner'', ''docked'') }}'
  - service: vacuum.set_fan_speed
    data:
      fan_speed: Balanced
      entity_id: vacuum.xiaomi_vacuum_cleaner
- id: IFTTT_stop_vaccum_webhook
  alias: Stop vaccum as asked through IFTTT
  trigger:
    platform: webhook
    webhook_id: vacuumStop
  condition:
  - condition: template
    value_template: '{{ trigger.json.type == ''call_service'' }}'
  - condition: template
    value_template: '{{ trigger.json.service == ''script.vacuum_stop'' }}'
  action:
  - service: system_log.write
    data_template:
      message: 'json received: {{ trigger.json }}'
      level: info
  - service: vacuum.stop
    data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
- id: IFTTT_recharge_vaccum_webhook
  alias: Send vaccum to base as asked through IFTTT
  trigger:
    platform: webhook
    webhook_id: vacuumGoToBase
  condition:
  - condition: template
    value_template: '{{ trigger.json.type == ''call_service'' }}'
  - condition: template
    value_template: '{{ trigger.json.service == ''script.vacuum_go_to_base'' }}'
  action:
  - service: system_log.write
    data_template:
      message: 'json received: {{ trigger.json }}'
      level: info
  - service: vacuum.return_to_base
    data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
- id: Vaccum_kitchen_and_dining_room_when_we_are_away
  alias: Vaccum Kitchen and dining room when we are away
  trigger:
  - at: '14:00'
    platform: time
  - condition: state
    entity_id: binary_sensor.people_home
    state: 'off'
  action:
  - service: script.turn_on
    data:
      entity_id: script.vacuum_kitchen_and_diningroom
